# [START cloudbuild_quickstart_build]
steps:
  # -------------------- Login to docker ---------------------------------
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [ '-c', 'docker login --username=$$DOCKER_USERNAME --password=$$DOCKER_PASSWORD' ]
    secretEnv: [ 'DOCKER_USERNAME', 'DOCKER_PASSWORD' ]

  # -------------------- Build docker image from dockerfile in the root of the repo ---------------------------------
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - build
      - '--no-cache'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build
    secretEnv:
      - PORT
      - VERSION
      - SERVICE_NAME
      - DB_CONNECTION_STRING
      - TEST_DB_CONNECTION_STRING
      - FIREBASE_APIKEY
      - FIREBASE_AUTHDOMAIN
      - FIREBASE_PROJECTID
      - FIREBASE_STORAGEBUCKET
      - FIREBASE_MESSAGINGSENDERID
      - FIREBASE_APPID
      - FIREBASE_MEASUREMENTID
      - APP_CONTEXT
      - TOKEN
      - DOCKER_USERNAME
      - DOCKER_PASSWORD
      - TEST_USER_PASSWORD
      - TEST_USER_ID

  # -------------------- Run docker image ---------------------------------
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'run', '-d', '-p', '8000:8000', '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA' ]
    id: 'Pull and Run Docker'

  # -------------------- Run playwright e2e tests ---------------------------------
  - name: 'node'
    entrypoint: 'npx'
    args: [ '-c', 'npx playwright install && npx playwright tests' ]
    id: 'Run Playwright Tests'
    waitFor: ['Pull and Run Docker']

  # -------------------- Deploy ---------------------------------
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $REPO_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud
    waitFor: ['Run Playwright Tests']
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA'
options:
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: ALLOW_LOOSE
substitutions:
  _DEPLOY_REGION: europe-north1
  _GCR_HOSTNAME: eu.gcr.io
  _PLATFORM: managed
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - selfcare_backend
availableSecrets:
  secretManager:
    - versionName: 'projects/$PROJECT_ID/secrets/PORT/versions/1'
      env: 'PORT'
    - versionName: 'projects/$PROJECT_ID/secrets/VERSION/versions/1'
      env: 'VERSION'
    - versionName: 'projects/$PROJECT_ID/secrets/SERVICE_NAME/versions/1'
      env: 'SERVICE_NAME'
    - versionName: 'projects/$PROJECT_ID/secrets/DB_CONNECTION_STRING/versions/1'
      env: 'DB_CONNECTION_STRING'
    - versionName: 'projects/$PROJECT_ID/secrets/TEST_DB_CONNECTION_STRING/versions/1'
      env: 'TEST_DB_CONNECTION_STRING'
    - versionName: 'projects/$PROJECT_ID/secrets/FIREBASE_APIKEY/versions/1'
      env: 'FIREBASE_APIKEY'
    - versionName: 'projects/$PROJECT_ID/secrets/FIREBASE_AUTHDOMAIN/versions/1'
      env: 'FIREBASE_AUTHDOMAIN'
    - versionName: 'projects/$PROJECT_ID/secrets/FIREBASE_PROJECTID/versions/1'
      env: 'FIREBASE_PROJECTID'
    - versionName: 'projects/$PROJECT_ID/secrets/FIREBASE_STORAGEBUCKET/versions/1'
      env: 'FIREBASE_STORAGEBUCKET'
    - versionName: 'projects/$PROJECT_ID/secrets/FIREBASE_MESSAGINGSENDERID/versions/1'
      env: 'FIREBASE_MESSAGINGSENDERID'
    - versionName: 'projects/$PROJECT_ID/secrets/FIREBASE_APPID/versions/1'
      env: 'FIREBASE_APPID'
    - versionName: 'projects/$PROJECT_ID/secrets/FIREBASE_MEASUREMENTID/versions/1'
      env: 'FIREBASE_MEASUREMENTID'
    - versionName: 'projects/$PROJECT_ID/secrets/APP_CONTEXT/versions/1'
      env: 'APP_CONTEXT'
    - versionName: 'projects/$PROJECT_ID/secrets/API_AUTH_TOKEN/versions/1'
      env: 'TOKEN'
    - versionName: 'projects/$PROJECT_ID/secrets/DOCKER_USERNAME/versions/1'
      env: 'DOCKER_USERNAME'
    - versionName: 'projects/$PROJECT_ID/secrets/DOCKER_PASSWORD/versions/1'
      env: 'DOCKER_PASSWORD'
    - versionName: 'projects/$PROJECT_ID/secrets/TEST_USER_PASSWORD/versions/1'
      env: 'TEST_USER_PASSWORD'
    - versionName: 'projects/$PROJECT_ID/secrets/TEST_USER_ID/versions/1'
      env: 'TEST_USER_ID'
# [END cloudbuild_quickstart_build]